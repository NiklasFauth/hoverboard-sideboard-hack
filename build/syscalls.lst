ARM GAS  /tmp/cc6ATwHg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 23, 1
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.thumb
  12              		.file	"syscalls.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.initialise_monitor_handles,"ax",%progbits
  17              		.align	2
  18              		.global	initialise_monitor_handles
  19              		.thumb
  20              		.thumb_func
  22              	initialise_monitor_handles:
  23              	.LFB0:
  24              		.file 1 "Src/syscalls.c"
   1:Src/syscalls.c **** /**
   2:Src/syscalls.c **** *****************************************************************************
   3:Src/syscalls.c **** **
   4:Src/syscalls.c **** **  File        : syscalls.c
   5:Src/syscalls.c **** **
   6:Src/syscalls.c **** **  Abstract    : System Workbench Minimal System calls file
   7:Src/syscalls.c **** **
   8:Src/syscalls.c **** ** 		          For more information about which c-functions
   9:Src/syscalls.c **** **                need which of these lowlevel functions
  10:Src/syscalls.c **** **                please consult the Newlib libc-manual
  11:Src/syscalls.c **** **
  12:Src/syscalls.c **** **  Environment : System Workbench for MCU
  13:Src/syscalls.c **** **
  14:Src/syscalls.c **** **  Distribution: The file is distributed “as is,” without any warranty
  15:Src/syscalls.c **** **                of any kind.
  16:Src/syscalls.c **** **
  17:Src/syscalls.c **** **  (c)Copyright System Workbench for MCU.
  18:Src/syscalls.c **** **  You may use this file as-is or modify it according to the needs of your
  19:Src/syscalls.c **** **  project. Distribution of this file (unmodified or modified) is not
  20:Src/syscalls.c **** **  permitted. System Workbench for MCU permit registered System Workbench(R) users the
  21:Src/syscalls.c **** **  rights to distribute the assembled, compiled & linked contents of this
  22:Src/syscalls.c **** **  file as part of an application binary file, provided that it is built
  23:Src/syscalls.c **** **  using the System Workbench for MCU toolchain.
  24:Src/syscalls.c **** **
  25:Src/syscalls.c **** *****************************************************************************
  26:Src/syscalls.c **** */
  27:Src/syscalls.c **** 
  28:Src/syscalls.c **** /* Includes */
  29:Src/syscalls.c **** #include <sys/stat.h>
  30:Src/syscalls.c **** #include <stdlib.h>
  31:Src/syscalls.c **** #include <errno.h>
  32:Src/syscalls.c **** #include <stdio.h>
  33:Src/syscalls.c **** #include <signal.h>
  34:Src/syscalls.c **** #include <time.h>
ARM GAS  /tmp/cc6ATwHg.s 			page 2


  35:Src/syscalls.c **** #include <sys/time.h>
  36:Src/syscalls.c **** #include <sys/times.h>
  37:Src/syscalls.c **** 
  38:Src/syscalls.c **** 
  39:Src/syscalls.c **** /* Variables */
  40:Src/syscalls.c **** //#undef errno
  41:Src/syscalls.c **** extern int errno;
  42:Src/syscalls.c **** //#define FreeRTOS
  43:Src/syscalls.c **** //#define MAX_STACK_SIZE 0x2000
  44:Src/syscalls.c **** 
  45:Src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  46:Src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  47:Src/syscalls.c **** 
  48:Src/syscalls.c **** #ifndef FreeRTOS
  49:Src/syscalls.c ****   register char * stack_ptr asm("sp");
  50:Src/syscalls.c **** #endif
  51:Src/syscalls.c **** 
  52:Src/syscalls.c **** 
  53:Src/syscalls.c **** register char * stack_ptr asm("sp");
  54:Src/syscalls.c **** 
  55:Src/syscalls.c **** char *__env[1] = { 0 };
  56:Src/syscalls.c **** char **environ = __env;
  57:Src/syscalls.c **** 
  58:Src/syscalls.c **** 
  59:Src/syscalls.c **** /* Functions */
  60:Src/syscalls.c **** void initialise_monitor_handles()
  61:Src/syscalls.c **** {
  25              		.loc 1 61 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 7047     		bx	lr
  31              		.cfi_endproc
  32              	.LFE0:
  34 0002 00BF     		.section	.text._getpid,"ax",%progbits
  35              		.align	2
  36              		.global	_getpid
  37              		.thumb
  38              		.thumb_func
  40              	_getpid:
  41              	.LFB1:
  62:Src/syscalls.c **** }
  63:Src/syscalls.c **** 
  64:Src/syscalls.c **** int _getpid(void)
  65:Src/syscalls.c **** {
  42              		.loc 1 65 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 0, uses_anonymous_args = 0
  46              		@ link register save eliminated.
  66:Src/syscalls.c **** 	return 1;
  67:Src/syscalls.c **** }
  47              		.loc 1 67 0
  48 0000 0120     		movs	r0, #1
  49 0002 7047     		bx	lr
  50              		.cfi_endproc
ARM GAS  /tmp/cc6ATwHg.s 			page 3


  51              	.LFE1:
  53              		.section	.text._kill,"ax",%progbits
  54              		.align	2
  55              		.global	_kill
  56              		.thumb
  57              		.thumb_func
  59              	_kill:
  60              	.LFB2:
  68:Src/syscalls.c **** 
  69:Src/syscalls.c **** int _kill(int pid, int sig)
  70:Src/syscalls.c **** {
  61              		.loc 1 70 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              	.LVL0:
  66 0000 08B5     		push	{r3, lr}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 8
  69              		.cfi_offset 3, -8
  70              		.cfi_offset 14, -4
  71:Src/syscalls.c **** 	errno = EINVAL;
  71              		.loc 1 71 0
  72 0002 FFF7FEFF 		bl	__errno
  73              	.LVL1:
  74 0006 1623     		movs	r3, #22
  75 0008 0360     		str	r3, [r0]
  72:Src/syscalls.c **** 	return -1;
  73:Src/syscalls.c **** }
  76              		.loc 1 73 0
  77 000a 4FF0FF30 		mov	r0, #-1
  78 000e 08BD     		pop	{r3, pc}
  79              		.cfi_endproc
  80              	.LFE2:
  82              		.section	.text._exit,"ax",%progbits
  83              		.align	2
  84              		.global	_exit
  85              		.thumb
  86              		.thumb_func
  88              	_exit:
  89              	.LFB3:
  74:Src/syscalls.c **** 
  75:Src/syscalls.c **** void _exit (int status)
  76:Src/syscalls.c **** {
  90              		.loc 1 76 0
  91              		.cfi_startproc
  92              		@ Volatile: function does not return.
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              	.LVL2:
  96 0000 08B5     		push	{r3, lr}
  97              	.LCFI1:
  98              		.cfi_def_cfa_offset 8
  99              		.cfi_offset 3, -8
 100              		.cfi_offset 14, -4
  77:Src/syscalls.c **** 	_kill(status, -1);
 101              		.loc 1 77 0
ARM GAS  /tmp/cc6ATwHg.s 			page 4


 102 0002 4FF0FF31 		mov	r1, #-1
 103 0006 FFF7FEFF 		bl	_kill
 104              	.LVL3:
 105              	.L5:
 106 000a FEE7     		b	.L5
 107              		.cfi_endproc
 108              	.LFE3:
 110              		.section	.text._read,"ax",%progbits
 111              		.align	2
 112              		.global	_read
 113              		.thumb
 114              		.thumb_func
 116              	_read:
 117              	.LFB4:
  78:Src/syscalls.c **** 	while (1) {}		/* Make sure we hang here */
  79:Src/syscalls.c **** }
  80:Src/syscalls.c **** 
  81:Src/syscalls.c **** int _read (int file, char *ptr, int len)
  82:Src/syscalls.c **** {
 118              		.loc 1 82 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              	.LVL4:
 123 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 124              	.LCFI2:
 125              		.cfi_def_cfa_offset 24
 126              		.cfi_offset 3, -24
 127              		.cfi_offset 4, -20
 128              		.cfi_offset 5, -16
 129              		.cfi_offset 6, -12
 130              		.cfi_offset 7, -8
 131              		.cfi_offset 14, -4
 132 0002 0D46     		mov	r5, r1
 133 0004 1746     		mov	r7, r2
 134              	.LVL5:
  83:Src/syscalls.c **** 	int DataIdx;
  84:Src/syscalls.c **** 
  85:Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 135              		.loc 1 85 0
 136 0006 0024     		movs	r4, #0
 137 0008 05E0     		b	.L7
 138              	.LVL6:
 139              	.L8:
  86:Src/syscalls.c **** 	{
  87:Src/syscalls.c **** 		*ptr++ = __io_getchar();
 140              		.loc 1 87 0 discriminator 2
 141 000a 6E1C     		adds	r6, r5, #1
 142              	.LVL7:
 143 000c FFF7FEFF 		bl	__io_getchar
 144              	.LVL8:
 145 0010 2870     		strb	r0, [r5]
  85:Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 146              		.loc 1 85 0 discriminator 2
 147 0012 0134     		adds	r4, r4, #1
 148              	.LVL9:
 149              		.loc 1 87 0 discriminator 2
ARM GAS  /tmp/cc6ATwHg.s 			page 5


 150 0014 3546     		mov	r5, r6
 151              	.LVL10:
 152              	.L7:
  85:Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 153              		.loc 1 85 0 discriminator 1
 154 0016 BC42     		cmp	r4, r7
 155 0018 F7DB     		blt	.L8
  88:Src/syscalls.c **** 	}
  89:Src/syscalls.c **** 
  90:Src/syscalls.c **** return len;
  91:Src/syscalls.c **** }
 156              		.loc 1 91 0
 157 001a 3846     		mov	r0, r7
 158 001c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 159              		.cfi_endproc
 160              	.LFE4:
 162 001e 00BF     		.section	.text._write,"ax",%progbits
 163              		.align	2
 164              		.global	_write
 165              		.thumb
 166              		.thumb_func
 168              	_write:
 169              	.LFB5:
  92:Src/syscalls.c **** 
  93:Src/syscalls.c **** int _write(int file, char *ptr, int len)
  94:Src/syscalls.c **** {
 170              		.loc 1 94 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              	.LVL11:
 175 0000 70B5     		push	{r4, r5, r6, lr}
 176              	.LCFI3:
 177              		.cfi_def_cfa_offset 16
 178              		.cfi_offset 4, -16
 179              		.cfi_offset 5, -12
 180              		.cfi_offset 6, -8
 181              		.cfi_offset 14, -4
 182 0002 1646     		mov	r6, r2
 183              	.LVL12:
  95:Src/syscalls.c **** 	int DataIdx;
  96:Src/syscalls.c **** 
  97:Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 184              		.loc 1 97 0
 185 0004 0024     		movs	r4, #0
 186 0006 05E0     		b	.L10
 187              	.LVL13:
 188              	.L11:
  98:Src/syscalls.c **** 	{
  99:Src/syscalls.c **** 		__io_putchar(*ptr++);
 189              		.loc 1 99 0 discriminator 2
 190 0008 4D1C     		adds	r5, r1, #1
 191              	.LVL14:
 192 000a 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 193 000c FFF7FEFF 		bl	__io_putchar
 194              	.LVL15:
  97:Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
ARM GAS  /tmp/cc6ATwHg.s 			page 6


 195              		.loc 1 97 0 discriminator 2
 196 0010 0134     		adds	r4, r4, #1
 197              	.LVL16:
 198              		.loc 1 99 0 discriminator 2
 199 0012 2946     		mov	r1, r5
 200              	.LVL17:
 201              	.L10:
  97:Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 202              		.loc 1 97 0 discriminator 1
 203 0014 B442     		cmp	r4, r6
 204 0016 F7DB     		blt	.L11
 100:Src/syscalls.c **** 	}
 101:Src/syscalls.c **** 	return len;
 102:Src/syscalls.c **** }
 205              		.loc 1 102 0
 206 0018 3046     		mov	r0, r6
 207 001a 70BD     		pop	{r4, r5, r6, pc}
 208              		.cfi_endproc
 209              	.LFE5:
 211              		.section	.text._sbrk,"ax",%progbits
 212              		.align	2
 213              		.global	_sbrk
 214              		.thumb
 215              		.thumb_func
 217              	_sbrk:
 218              	.LFB6:
 103:Src/syscalls.c **** 
 104:Src/syscalls.c **** caddr_t _sbrk(int incr)
 105:Src/syscalls.c **** {
 219              		.loc 1 105 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              	.LVL18:
 224 0000 08B5     		push	{r3, lr}
 225              	.LCFI4:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 3, -8
 228              		.cfi_offset 14, -4
 106:Src/syscalls.c **** 	extern char end asm("end");
 107:Src/syscalls.c **** 	static char *heap_end;
 108:Src/syscalls.c **** 	char *prev_heap_end;
 109:Src/syscalls.c **** 
 110:Src/syscalls.c **** 	if (heap_end == 0)
 229              		.loc 1 110 0
 230 0002 0B4B     		ldr	r3, .L16
 231 0004 1B68     		ldr	r3, [r3]
 232 0006 13B9     		cbnz	r3, .L13
 111:Src/syscalls.c **** 		heap_end = &end;
 233              		.loc 1 111 0
 234 0008 0A4A     		ldr	r2, .L16+4
 235 000a 094B     		ldr	r3, .L16
 236 000c 1A60     		str	r2, [r3]
 237              	.L13:
 112:Src/syscalls.c **** 
 113:Src/syscalls.c **** 	prev_heap_end = heap_end;
 238              		.loc 1 113 0
ARM GAS  /tmp/cc6ATwHg.s 			page 7


 239 000e 084B     		ldr	r3, .L16
 240 0010 1B68     		ldr	r3, [r3]
 241              	.LVL19:
 114:Src/syscalls.c **** 	if (heap_end + incr > stack_ptr)
 242              		.loc 1 114 0
 243 0012 1844     		add	r0, r0, r3
 244              	.LVL20:
 245 0014 6A46     		mov	r2, sp
 246 0016 9042     		cmp	r0, r2
 247 0018 06D9     		bls	.L14
 115:Src/syscalls.c **** 	{
 116:Src/syscalls.c **** //		write(1, "Heap and stack collision\n", 25);
 117:Src/syscalls.c **** //		abort();
 118:Src/syscalls.c **** 		errno = ENOMEM;
 248              		.loc 1 118 0
 249 001a FFF7FEFF 		bl	__errno
 250              	.LVL21:
 251 001e 0C23     		movs	r3, #12
 252 0020 0360     		str	r3, [r0]
 119:Src/syscalls.c **** 		return (caddr_t) -1;
 253              		.loc 1 119 0
 254 0022 4FF0FF30 		mov	r0, #-1
 255 0026 08BD     		pop	{r3, pc}
 256              	.LVL22:
 257              	.L14:
 120:Src/syscalls.c **** 	}
 121:Src/syscalls.c **** 
 122:Src/syscalls.c **** 	heap_end += incr;
 258              		.loc 1 122 0
 259 0028 014A     		ldr	r2, .L16
 260 002a 1060     		str	r0, [r2]
 123:Src/syscalls.c **** 
 124:Src/syscalls.c **** 	return (caddr_t) prev_heap_end;
 261              		.loc 1 124 0
 262 002c 1846     		mov	r0, r3
 125:Src/syscalls.c **** }
 263              		.loc 1 125 0
 264 002e 08BD     		pop	{r3, pc}
 265              	.LVL23:
 266              	.L17:
 267              		.align	2
 268              	.L16:
 269 0030 00000000 		.word	.LANCHOR0
 270 0034 00000000 		.word	end
 271              		.cfi_endproc
 272              	.LFE6:
 274              		.section	.text._close,"ax",%progbits
 275              		.align	2
 276              		.global	_close
 277              		.thumb
 278              		.thumb_func
 280              	_close:
 281              	.LFB7:
 126:Src/syscalls.c **** 
 127:Src/syscalls.c **** int _close(int file)
 128:Src/syscalls.c **** {
 282              		.loc 1 128 0
ARM GAS  /tmp/cc6ATwHg.s 			page 8


 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287              	.LVL24:
 129:Src/syscalls.c **** 	return -1;
 130:Src/syscalls.c **** }
 288              		.loc 1 130 0
 289 0000 4FF0FF30 		mov	r0, #-1
 290              	.LVL25:
 291 0004 7047     		bx	lr
 292              		.cfi_endproc
 293              	.LFE7:
 295 0006 00BF     		.section	.text._fstat,"ax",%progbits
 296              		.align	2
 297              		.global	_fstat
 298              		.thumb
 299              		.thumb_func
 301              	_fstat:
 302              	.LFB8:
 131:Src/syscalls.c **** 
 132:Src/syscalls.c **** 
 133:Src/syscalls.c **** int _fstat(int file, struct stat *st)
 134:Src/syscalls.c **** {
 303              		.loc 1 134 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308              	.LVL26:
 135:Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 309              		.loc 1 135 0
 310 0000 4FF40053 		mov	r3, #8192
 311 0004 4B60     		str	r3, [r1, #4]
 136:Src/syscalls.c **** 	return 0;
 137:Src/syscalls.c **** }
 312              		.loc 1 137 0
 313 0006 0020     		movs	r0, #0
 314              	.LVL27:
 315 0008 7047     		bx	lr
 316              		.cfi_endproc
 317              	.LFE8:
 319              		.section	.text._isatty,"ax",%progbits
 320              		.align	2
 321              		.global	_isatty
 322              		.thumb
 323              		.thumb_func
 325              	_isatty:
 326              	.LFB9:
 138:Src/syscalls.c **** 
 139:Src/syscalls.c **** int _isatty(int file)
 140:Src/syscalls.c **** {
 327              		.loc 1 140 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              		@ link register save eliminated.
ARM GAS  /tmp/cc6ATwHg.s 			page 9


 332              	.LVL28:
 141:Src/syscalls.c **** 	return 1;
 142:Src/syscalls.c **** }
 333              		.loc 1 142 0
 334 0000 0120     		movs	r0, #1
 335              	.LVL29:
 336 0002 7047     		bx	lr
 337              		.cfi_endproc
 338              	.LFE9:
 340              		.section	.text._lseek,"ax",%progbits
 341              		.align	2
 342              		.global	_lseek
 343              		.thumb
 344              		.thumb_func
 346              	_lseek:
 347              	.LFB10:
 143:Src/syscalls.c **** 
 144:Src/syscalls.c **** int _lseek(int file, int ptr, int dir)
 145:Src/syscalls.c **** {
 348              		.loc 1 145 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 353              	.LVL30:
 146:Src/syscalls.c **** 	return 0;
 147:Src/syscalls.c **** }
 354              		.loc 1 147 0
 355 0000 0020     		movs	r0, #0
 356              	.LVL31:
 357 0002 7047     		bx	lr
 358              		.cfi_endproc
 359              	.LFE10:
 361              		.section	.text._open,"ax",%progbits
 362              		.align	2
 363              		.global	_open
 364              		.thumb
 365              		.thumb_func
 367              	_open:
 368              	.LFB11:
 148:Src/syscalls.c **** 
 149:Src/syscalls.c **** int _open(char *path, int flags, ...)
 150:Src/syscalls.c **** {
 369              		.loc 1 150 0
 370              		.cfi_startproc
 371              		@ args = 4, pretend = 12, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 1
 373              		@ link register save eliminated.
 374              	.LVL32:
 375 0000 0EB4     		push	{r1, r2, r3}
 376              	.LCFI5:
 377              		.cfi_def_cfa_offset 12
 378              		.cfi_offset 1, -12
 379              		.cfi_offset 2, -8
 380              		.cfi_offset 3, -4
 151:Src/syscalls.c **** 	/* Pretend like we always fail */
 152:Src/syscalls.c **** 	return -1;
ARM GAS  /tmp/cc6ATwHg.s 			page 10


 153:Src/syscalls.c **** }
 381              		.loc 1 153 0
 382 0002 4FF0FF30 		mov	r0, #-1
 383              	.LVL33:
 384 0006 03B0     		add	sp, sp, #12
 385 0008 7047     		bx	lr
 386              		.cfi_endproc
 387              	.LFE11:
 389 000a 00BF     		.section	.text._wait,"ax",%progbits
 390              		.align	2
 391              		.global	_wait
 392              		.thumb
 393              		.thumb_func
 395              	_wait:
 396              	.LFB12:
 154:Src/syscalls.c **** 
 155:Src/syscalls.c **** int _wait(int *status)
 156:Src/syscalls.c **** {
 397              		.loc 1 156 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              	.LVL34:
 402 0000 08B5     		push	{r3, lr}
 403              	.LCFI6:
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 3, -8
 406              		.cfi_offset 14, -4
 157:Src/syscalls.c **** 	errno = ECHILD;
 407              		.loc 1 157 0
 408 0002 FFF7FEFF 		bl	__errno
 409              	.LVL35:
 410 0006 0A23     		movs	r3, #10
 411 0008 0360     		str	r3, [r0]
 158:Src/syscalls.c **** 	return -1;
 159:Src/syscalls.c **** }
 412              		.loc 1 159 0
 413 000a 4FF0FF30 		mov	r0, #-1
 414 000e 08BD     		pop	{r3, pc}
 415              		.cfi_endproc
 416              	.LFE12:
 418              		.section	.text._unlink,"ax",%progbits
 419              		.align	2
 420              		.global	_unlink
 421              		.thumb
 422              		.thumb_func
 424              	_unlink:
 425              	.LFB13:
 160:Src/syscalls.c **** 
 161:Src/syscalls.c **** int _unlink(char *name)
 162:Src/syscalls.c **** {
 426              		.loc 1 162 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430              	.LVL36:
 431 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/cc6ATwHg.s 			page 11


 432              	.LCFI7:
 433              		.cfi_def_cfa_offset 8
 434              		.cfi_offset 3, -8
 435              		.cfi_offset 14, -4
 163:Src/syscalls.c **** 	errno = ENOENT;
 436              		.loc 1 163 0
 437 0002 FFF7FEFF 		bl	__errno
 438              	.LVL37:
 439 0006 0223     		movs	r3, #2
 440 0008 0360     		str	r3, [r0]
 164:Src/syscalls.c **** 	return -1;
 165:Src/syscalls.c **** }
 441              		.loc 1 165 0
 442 000a 4FF0FF30 		mov	r0, #-1
 443 000e 08BD     		pop	{r3, pc}
 444              		.cfi_endproc
 445              	.LFE13:
 447              		.section	.text._times,"ax",%progbits
 448              		.align	2
 449              		.global	_times
 450              		.thumb
 451              		.thumb_func
 453              	_times:
 454              	.LFB14:
 166:Src/syscalls.c **** 
 167:Src/syscalls.c **** int _times(struct tms *buf)
 168:Src/syscalls.c **** {
 455              		.loc 1 168 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459              		@ link register save eliminated.
 460              	.LVL38:
 169:Src/syscalls.c **** 	return -1;
 170:Src/syscalls.c **** }
 461              		.loc 1 170 0
 462 0000 4FF0FF30 		mov	r0, #-1
 463              	.LVL39:
 464 0004 7047     		bx	lr
 465              		.cfi_endproc
 466              	.LFE14:
 468 0006 00BF     		.section	.text._stat,"ax",%progbits
 469              		.align	2
 470              		.global	_stat
 471              		.thumb
 472              		.thumb_func
 474              	_stat:
 475              	.LFB15:
 171:Src/syscalls.c **** 
 172:Src/syscalls.c **** int _stat(char *file, struct stat *st)
 173:Src/syscalls.c **** {
 476              		.loc 1 173 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480              		@ link register save eliminated.
 481              	.LVL40:
ARM GAS  /tmp/cc6ATwHg.s 			page 12


 174:Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 482              		.loc 1 174 0
 483 0000 4FF40053 		mov	r3, #8192
 484 0004 4B60     		str	r3, [r1, #4]
 175:Src/syscalls.c **** 	return 0;
 176:Src/syscalls.c **** }
 485              		.loc 1 176 0
 486 0006 0020     		movs	r0, #0
 487              	.LVL41:
 488 0008 7047     		bx	lr
 489              		.cfi_endproc
 490              	.LFE15:
 492              		.section	.text._link,"ax",%progbits
 493              		.align	2
 494              		.global	_link
 495              		.thumb
 496              		.thumb_func
 498              	_link:
 499              	.LFB16:
 177:Src/syscalls.c **** 
 178:Src/syscalls.c **** int _link(char *old, char *new)
 179:Src/syscalls.c **** {
 500              		.loc 1 179 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504              	.LVL42:
 505 0000 08B5     		push	{r3, lr}
 506              	.LCFI8:
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 3, -8
 509              		.cfi_offset 14, -4
 180:Src/syscalls.c **** 	errno = EMLINK;
 510              		.loc 1 180 0
 511 0002 FFF7FEFF 		bl	__errno
 512              	.LVL43:
 513 0006 1F23     		movs	r3, #31
 514 0008 0360     		str	r3, [r0]
 181:Src/syscalls.c **** 	return -1;
 182:Src/syscalls.c **** }
 515              		.loc 1 182 0
 516 000a 4FF0FF30 		mov	r0, #-1
 517 000e 08BD     		pop	{r3, pc}
 518              		.cfi_endproc
 519              	.LFE16:
 521              		.section	.text._fork,"ax",%progbits
 522              		.align	2
 523              		.global	_fork
 524              		.thumb
 525              		.thumb_func
 527              	_fork:
 528              	.LFB17:
 183:Src/syscalls.c **** 
 184:Src/syscalls.c **** int _fork(void)
 185:Src/syscalls.c **** {
 529              		.loc 1 185 0
 530              		.cfi_startproc
ARM GAS  /tmp/cc6ATwHg.s 			page 13


 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533 0000 08B5     		push	{r3, lr}
 534              	.LCFI9:
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 3, -8
 537              		.cfi_offset 14, -4
 186:Src/syscalls.c **** 	errno = EAGAIN;
 538              		.loc 1 186 0
 539 0002 FFF7FEFF 		bl	__errno
 540              	.LVL44:
 541 0006 0B23     		movs	r3, #11
 542 0008 0360     		str	r3, [r0]
 187:Src/syscalls.c **** 	return -1;
 188:Src/syscalls.c **** }
 543              		.loc 1 188 0
 544 000a 4FF0FF30 		mov	r0, #-1
 545 000e 08BD     		pop	{r3, pc}
 546              		.cfi_endproc
 547              	.LFE17:
 549              		.section	.text._execve,"ax",%progbits
 550              		.align	2
 551              		.global	_execve
 552              		.thumb
 553              		.thumb_func
 555              	_execve:
 556              	.LFB18:
 189:Src/syscalls.c **** 
 190:Src/syscalls.c **** int _execve(char *name, char **argv, char **env)
 191:Src/syscalls.c **** {
 557              		.loc 1 191 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              	.LVL45:
 562 0000 08B5     		push	{r3, lr}
 563              	.LCFI10:
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 3, -8
 566              		.cfi_offset 14, -4
 192:Src/syscalls.c **** 	errno = ENOMEM;
 567              		.loc 1 192 0
 568 0002 FFF7FEFF 		bl	__errno
 569              	.LVL46:
 570 0006 0C23     		movs	r3, #12
 571 0008 0360     		str	r3, [r0]
 193:Src/syscalls.c **** 	return -1;
 194:Src/syscalls.c **** }
 572              		.loc 1 194 0
 573 000a 4FF0FF30 		mov	r0, #-1
 574 000e 08BD     		pop	{r3, pc}
 575              		.cfi_endproc
 576              	.LFE18:
 578              		.global	environ
 579              		.global	__env
 580              		.section	.data.environ,"aw",%progbits
 581              		.align	2
ARM GAS  /tmp/cc6ATwHg.s 			page 14


 584              	environ:
 585 0000 00000000 		.word	__env
 586              		.section	.bss.__env,"aw",%nobits
 587              		.align	2
 590              	__env:
 591 0000 00000000 		.space	4
 592              		.section	.bss.heap_end.5582,"aw",%nobits
 593              		.align	2
 594              		.set	.LANCHOR0,. + 0
 597              	heap_end.5582:
 598 0000 00000000 		.space	4
 599              		.weak	__io_putchar
 600              		.weak	__io_getchar
 601              		.text
 602              	.Letext0:
 603              		.file 2 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/sys/_types.h"
 604              		.file 3 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/sys/types.h"
 605              		.file 4 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/sys/stat.h"
 606              		.file 5 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/sys/times.h"
 607              		.file 6 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/sys/errno.h"
ARM GAS  /tmp/cc6ATwHg.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 syscalls.c
     /tmp/cc6ATwHg.s:17     .text.initialise_monitor_handles:00000000 $t
     /tmp/cc6ATwHg.s:22     .text.initialise_monitor_handles:00000000 initialise_monitor_handles
     /tmp/cc6ATwHg.s:35     .text._getpid:00000000 $t
     /tmp/cc6ATwHg.s:40     .text._getpid:00000000 _getpid
     /tmp/cc6ATwHg.s:54     .text._kill:00000000 $t
     /tmp/cc6ATwHg.s:59     .text._kill:00000000 _kill
     /tmp/cc6ATwHg.s:83     .text._exit:00000000 $t
     /tmp/cc6ATwHg.s:88     .text._exit:00000000 _exit
     /tmp/cc6ATwHg.s:111    .text._read:00000000 $t
     /tmp/cc6ATwHg.s:116    .text._read:00000000 _read
     /tmp/cc6ATwHg.s:163    .text._write:00000000 $t
     /tmp/cc6ATwHg.s:168    .text._write:00000000 _write
     /tmp/cc6ATwHg.s:212    .text._sbrk:00000000 $t
     /tmp/cc6ATwHg.s:217    .text._sbrk:00000000 _sbrk
     /tmp/cc6ATwHg.s:269    .text._sbrk:00000030 $d
     /tmp/cc6ATwHg.s:275    .text._close:00000000 $t
     /tmp/cc6ATwHg.s:280    .text._close:00000000 _close
     /tmp/cc6ATwHg.s:296    .text._fstat:00000000 $t
     /tmp/cc6ATwHg.s:301    .text._fstat:00000000 _fstat
     /tmp/cc6ATwHg.s:320    .text._isatty:00000000 $t
     /tmp/cc6ATwHg.s:325    .text._isatty:00000000 _isatty
     /tmp/cc6ATwHg.s:341    .text._lseek:00000000 $t
     /tmp/cc6ATwHg.s:346    .text._lseek:00000000 _lseek
     /tmp/cc6ATwHg.s:362    .text._open:00000000 $t
     /tmp/cc6ATwHg.s:367    .text._open:00000000 _open
     /tmp/cc6ATwHg.s:390    .text._wait:00000000 $t
     /tmp/cc6ATwHg.s:395    .text._wait:00000000 _wait
     /tmp/cc6ATwHg.s:419    .text._unlink:00000000 $t
     /tmp/cc6ATwHg.s:424    .text._unlink:00000000 _unlink
     /tmp/cc6ATwHg.s:448    .text._times:00000000 $t
     /tmp/cc6ATwHg.s:453    .text._times:00000000 _times
     /tmp/cc6ATwHg.s:469    .text._stat:00000000 $t
     /tmp/cc6ATwHg.s:474    .text._stat:00000000 _stat
     /tmp/cc6ATwHg.s:493    .text._link:00000000 $t
     /tmp/cc6ATwHg.s:498    .text._link:00000000 _link
     /tmp/cc6ATwHg.s:522    .text._fork:00000000 $t
     /tmp/cc6ATwHg.s:527    .text._fork:00000000 _fork
     /tmp/cc6ATwHg.s:550    .text._execve:00000000 $t
     /tmp/cc6ATwHg.s:555    .text._execve:00000000 _execve
     /tmp/cc6ATwHg.s:584    .data.environ:00000000 environ
     /tmp/cc6ATwHg.s:590    .bss.__env:00000000 __env
     /tmp/cc6ATwHg.s:581    .data.environ:00000000 $d
     /tmp/cc6ATwHg.s:587    .bss.__env:00000000 $d
     /tmp/cc6ATwHg.s:593    .bss.heap_end.5582:00000000 $d
     /tmp/cc6ATwHg.s:597    .bss.heap_end.5582:00000000 heap_end.5582
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
end
